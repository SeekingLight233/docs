(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{554:function(t,a,s){t.exports=s.p+"assets/img/01.7f2912ff.png"},555:function(t,a,s){t.exports=s.p+"assets/img/02.21e26d78.png"},556:function(t,a,s){t.exports=s.p+"assets/img/03.a4f3e201.png"},557:function(t,a,s){t.exports=s.p+"assets/img/04.9b5dac6d.png"},558:function(t,a,s){t.exports=s.p+"assets/img/05.f873db70.png"},559:function(t,a,s){t.exports=s.p+"assets/img/07.53c4b9d6.png"},560:function(t,a,s){t.exports=s.p+"assets/img/09.2ba6c5a0.png"},561:function(t,a,s){t.exports=s.p+"assets/img/10.f1840296.png"},562:function(t,a,s){t.exports=s.p+"assets/img/12.fe2c01e8.png"},563:function(t,a,s){t.exports=s.p+"assets/img/13.5202f0da.png"},564:function(t,a,s){t.exports=s.p+"assets/img/14.61a30d33.png"},565:function(t,a,s){t.exports=s.p+"assets/img/15.8d082eb0.png"},758:function(t,a,s){"use strict";s.r(a);var r=s(8),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),r("h3",{attrs:{id:"计算机指令的形式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机指令的形式"}},[t._v("#")]),t._v(" 计算机指令的形式")]),t._v(" "),r("p",[r("img",{attrs:{src:s(554),alt:""}})]),t._v(" "),r("p",[t._v("其中操作码字段指明指令要完成什么操作，操作码的位数可以决定机器可以执行多少种操作。\n地址码部分放的是操作数或者是操作数的地址。")]),t._v(" "),r("p",[t._v("地址码可以分为三地址指令，二地址指令，一地址指令和零地址指令。")]),t._v(" "),r("h4",{attrs:{id:"三地址指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三地址指令"}},[t._v("#")]),t._v(" 三地址指令")]),t._v(" "),r("p",[r("img",{attrs:{src:s(555),alt:""}})]),t._v(" "),r("p",[t._v("地址1操作地址2并将结果保存在地址3。")]),t._v(" "),r("h4",{attrs:{id:"二地址指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二地址指令"}},[t._v("#")]),t._v(" 二地址指令")]),t._v(" "),r("p",[r("img",{attrs:{src:s(556),alt:""}})]),t._v(" "),r("p",[t._v("地址1操作地址2并将结果保存在1或者2")]),t._v(" "),r("h4",{attrs:{id:"一地址指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一地址指令"}},[t._v("#")]),t._v(" 一地址指令")]),t._v(" "),r("p",[r("img",{attrs:{src:s(557),alt:""}}),t._v("\n自己对自己进行某种操作并将结果保存在自己的“内存”上。\n比如自增，自减。")]),t._v(" "),r("h4",{attrs:{id:"零地址指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#零地址指令"}},[t._v("#")]),t._v(" 零地址指令")]),t._v(" "),r("p",[t._v("就是没有地址字段的指令，通常是计算机中一些极其重要的特殊操作。\n如中断，停机，空操作等等。")]),t._v(" "),r("h3",{attrs:{id:"机器指令的操作类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#机器指令的操作类型"}},[t._v("#")]),t._v(" 机器指令的操作类型")]),t._v(" "),r("h4",{attrs:{id:"数据传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据传输"}},[t._v("#")]),t._v(" 数据传输")]),t._v(" "),r("p",[t._v("此类型指令主要负责数据在内存，外存，cache间的消息传递，"),r("strong",[t._v("以及对数据进行读写")]),t._v("。")]),t._v(" "),r("h4",{attrs:{id:"算数逻辑操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算数逻辑操作"}},[t._v("#")]),t._v(" 算数逻辑操作")]),t._v(" "),r("p",[t._v("此类型指令负责对操作数进行四则运算和逻辑运算（"),r("strong",[t._v("注意没有移位运算")]),t._v("）")]),t._v(" "),r("h4",{attrs:{id:"移位操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#移位操作"}},[t._v("#")]),t._v(" 移位操作")]),t._v(" "),r("p",[t._v("此类型主要对操作数进行左移操作(乘2)和右移操作(除2)。")]),t._v(" "),r("h4",{attrs:{id:"控制指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#控制指令"}},[t._v("#")]),t._v(" 控制指令")]),t._v(" "),r("p",[t._v("大部分都是零地址指令。如中断，停机，等待，空操作等等。")]),t._v(" "),r("h3",{attrs:{id:"机器指令的寻址方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#机器指令的寻址方式"}},[t._v("#")]),t._v(" 机器指令的寻址方式")]),t._v(" "),r("p",[t._v("就是指令要通过什么方式获取到自己所需要的操作数。")]),t._v(" "),r("h4",{attrs:{id:"指令寻址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令寻址"}},[t._v("#")]),t._v(" 指令寻址")]),t._v(" "),r("p",[t._v("根据指令的具体内容来寻址，主要是为了"),r("strong",[t._v("找到下一条")]),t._v("要执行的指令。\n主要有两种表现形式，一种是顺序执行，一种是跳跃执行。\n"),r("img",{attrs:{src:s(558),alt:""}}),t._v("\n正常情况会从101开始执行，但当执行到JMP指令的时候便会跳转到102。")]),t._v(" "),r("h4",{attrs:{id:"数据寻址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据寻址"}},[t._v("#")]),t._v(" 数据寻址")]),t._v(" "),r("p",[t._v("主要是为了找到本条指令所需要的"),r("strong",[t._v("操作数")]),t._v("。")]),t._v(" "),r("h5",{attrs:{id:"立即寻址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#立即寻址"}},[t._v("#")]),t._v(" 立即寻址")]),t._v(" "),r("p",[t._v("指令直接获得操作数，无需访问存储器。")]),t._v(" "),r("h5",{attrs:{id:"直接寻址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#直接寻址"}},[t._v("#")]),t._v(" 直接寻址")]),t._v(" "),r("p",[t._v("指令中直接给出"),r("strong",[t._v("操作数在主存中的地址")]),t._v("。")]),t._v(" "),r("h5",{attrs:{id:"间接寻址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#间接寻址"}},[t._v("#")]),t._v(" 间接寻址")]),t._v(" "),r("p",[t._v("指令中给出的是操作数"),r("strong",[t._v("地址的地址")]),t._v("。也就意味着要访问多次才能获取到操作数。")]),t._v(" "),r("h5",{attrs:{id:"三种方式对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三种方式对比"}},[t._v("#")]),t._v(" 三种方式对比")]),t._v(" "),r("p",[r("img",{attrs:{src:s(559),alt:""}})]),t._v(" "),r("h2",{attrs:{id:"控制器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[t._v("#")]),t._v(" 控制器")]),t._v(" "),r("p",[t._v("cpu中的控制器主要是用来协调和控制计算机运行的。")]),t._v(" "),r("h3",{attrs:{id:"时序发生器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时序发生器"}},[t._v("#")]),t._v(" 时序发生器")]),t._v(" "),r("p",[t._v("主要应用于电气工程领域，用来发送时序脉冲。\ncpu会根据不同的时序脉冲进行有规律的工作。")]),t._v(" "),r("h3",{attrs:{id:"指令译码器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令译码器"}},[t._v("#")]),t._v(" 指令译码器")]),t._v(" "),r("p",[t._v("用来翻译操作码对应的操作数以及控制传输地址码的数据。")]),t._v(" "),r("h3",{attrs:{id:"寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#寄存器"}},[t._v("#")]),t._v(" 寄存器")]),t._v(" "),r("h4",{attrs:{id:"程序计数器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[t._v("#")]),t._v(" 程序计数器")]),t._v(" "),r("p",[t._v("有时也被称之为"),r("strong",[t._v("指令地址寄存器")]),t._v("，存储下一条指令的地址，可以用来缓存将要运行的指令地址。")]),t._v(" "),r("h4",{attrs:{id:"指令寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令寄存器"}},[t._v("#")]),t._v(" 指令寄存器")]),t._v(" "),r("p",[t._v("注意区分程序计数器，用于临时存储从主存或高速缓存中的指令。")]),t._v(" "),r("h4",{attrs:{id:"主存地址寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主存地址寄存器"}},[t._v("#")]),t._v(" 主存地址寄存器")]),t._v(" "),r("p",[t._v("连接地址总线，用来寄存当前cpu正要访问的内存单元的地址。")]),t._v(" "),r("h4",{attrs:{id:"主存数据寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主存数据寄存器"}},[t._v("#")]),t._v(" 主存数据寄存器")]),t._v(" "),r("p",[t._v("连接数据总线，用来寄存当前cpu正要读或写的内存单元的数据。")]),t._v(" "),r("h4",{attrs:{id:"通用寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通用寄存器"}},[t._v("#")]),t._v(" 通用寄存器")]),t._v(" "),r("p",[t._v("容量比专用的寄存器要大一些，用来存一指令，ALU的运算结果啥的。")]),t._v(" "),r("h2",{attrs:{id:"运算器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运算器"}},[t._v("#")]),t._v(" 运算器")]),t._v(" "),r("p",[r("img",{attrs:{src:s(560),alt:""}})]),t._v(" "),r("p",[t._v("用来对数据进行运算加工。")]),t._v(" "),r("h3",{attrs:{id:"数据缓冲器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据缓冲器"}},[t._v("#")]),t._v(" 数据缓冲器")]),t._v(" "),r("p",[t._v("分为输入缓冲和输出缓冲。\n输入缓冲用来暂存将要参与运算的数据。\n输出缓冲用来暂存运算完的结果。")]),t._v(" "),r("h3",{attrs:{id:"alu"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#alu"}},[t._v("#")]),t._v(" ALU")]),t._v(" "),r("p",[r("img",{attrs:{src:s(561),alt:""}}),t._v("\n算数逻辑单元，用来进行位运算，逻辑运算以及算数运算。")]),t._v(" "),r("h3",{attrs:{id:"状态字寄存器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#状态字寄存器"}},[t._v("#")]),t._v(" 状态字寄存器")]),t._v(" "),r("p",[t._v("用来存放运算状态(进位，溢出，正负等等)和运算控制信息。")]),t._v(" "),r("h2",{attrs:{id:"计算机指令执行的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机指令执行的过程"}},[t._v("#")]),t._v(" 计算机指令执行的过程")]),t._v(" "),r("h3",{attrs:{id:"指令的执行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指令的执行过程"}},[t._v("#")]),t._v(" 指令的执行过程")]),t._v(" "),r("p",[t._v("概括下来一共三个步骤。")]),t._v(" "),r("p",[r("strong",[t._v("取指令 => 分析指令 => 执行指令")])]),t._v(" "),r("p",[r("img",{attrs:{src:s(562),alt:""}})]),t._v(" "),r("p",[t._v("如图所示，首先将数据和指令缓存到高速缓存中，程序计数器会将要执行的指令的"),r("strong",[t._v("地址")]),t._v("寄存起来，此时控制器知道了要执行的指令的位置，控制器中的指令寄存器就可以顺着总线取到指令。但这个时候具体该做什么操作控制器其实还并不知道，因为指令的内容还没有翻译，指令寄存器接下来会将指令发送给指令译码器。")]),t._v(" "),r("p",[r("img",{attrs:{src:s(563),alt:""}})]),t._v(" "),r("p",[t._v("当指令寄存器将指令发过去之后，此时"),r("strong",[t._v("程序计数器会+1")]),t._v(",同时指令译码器会进行翻译，然后由时序发生器发出控制信号给运算器。")]),t._v(" "),r("p",[t._v("运算器在收到信号后会先将要操作的数（R0）取出来放到数据缓冲器中，然后由ALU进行数据处理并记录运算状态(进位，溢出等等)，最后ALU会把结果送出来放到数据缓冲器中。")]),t._v(" "),r("p",[t._v("操作完成后程序计数器已经到了102，就会继续执行与101类似的操作。")]),t._v(" "),r("h3",{attrs:{id:"cpu的流水线设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cpu的流水线设计"}},[t._v("#")]),t._v(" CPU的流水线设计")]),t._v(" "),r("p",[t._v("类似于工厂的流水线，同一个时刻，一个产品("),r("strong",[t._v("指令")]),t._v(")处于不同的加工("),r("strong",[t._v("执行")]),t._v(")阶段。")]),t._v(" "),r("p",[r("img",{attrs:{src:s(564),alt:""}})]),t._v(" "),r("p",[t._v("上图是串行cpu和流水cpu的执行过程。")]),t._v(" "),r("p",[r("img",{attrs:{src:s(565),alt:""}}),t._v("\n从本质上讲，流水线技术是一种"),r("strong",[t._v("时间并行技术")]),t._v("。及在相同的时间"),r("strong",[t._v("点")]),t._v("上执行不同的任务。")])])}),[],!1,null,null,null);a.default=v.exports}}]);